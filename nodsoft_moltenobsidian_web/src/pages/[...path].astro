---
import Layout from '../layouts/Layout.astro';
import { cast, toRelativeVaultPath } from '../vault-utils';
import { VaultManifestClient } from 'moltenobsidian-ssg-client/manifest-client';
import type { VaultManifest, VaultFile, VaultFileMetadata } from 'moltenobsidian-ssg-client/vault-manifest';
import manifest from '../../public/vault/moltenobsidian.manifest.json';
import fs from 'node:fs/promises';
import { Seo } from "astro-seo-meta";


export const manifestClient = VaultManifestClient.fromManifest(manifest as VaultManifest);



export async function getStaticPaths() {    
    const paths = [];
    
    for (const [path, file] of manifestClient.routingTable) {
        const ssgPath = new URL(toRelativeVaultPath(manifestClient.getSsgPath(file)), import.meta.url);
        const content = await fs.readFile(ssgPath, 'utf-8');
        const frontMatter =  file as VaultFileMetadata ?? {};
        
        if (frontMatter.moltenobsidian?.publish === false || frontMatter.obsidian?.publish === false) continue;
        
        paths.push({
            params: {path: path === '' ? undefined : path},
            props: {
                content: content,
                ...frontMatter
            },
            routing: manifestClient.routingTable
        });
    }
    
    return paths;
}

const { path } = Astro.params;
const { content, cssclasses } = Astro.props;
---

<Layout>   
    <Seo 
      slot="head"
      title="MoltenObsidian"
      description=".NET 6+ CLI Tool & Blazor Library for Obsidian-flavoured Markdown parsing with Vault mapping support."
      keywords={["MoltenObsidian", "Obsidian", "Markdown", "Vault", "Blazor", "CLI", ".NET"]}
      icon="/favicon.ico"
      themeColor="#883AEB"
      colorScheme="dark"
      facebook={{
          image: "/android-chrome-512x512.png",
          type: "website"
      }}
      
      twitter.image="/android-chrome-512x512.png"
      twitter.card="summary_large_image"
    />
    
    <article style="margin-top: 4rem; margin-bottom: 4rem;" class:list={cssclasses}>
        <Fragment set:html={content} />
    </article>
</Layout>