name: Deploy Astro website to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [ main, feature/web ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup MoltenObsidian
        uses: nodsoft/setup-moltenobsidian@main
        
      - name: Generate Vault manifest
        run: moltenobsidian manifest generate "nodsoft_moltenobsidian_web/vault"
        
      - name: Create output directory (recursive)
        run: mkdir -p "nodsoft_moltenobsidian_web/src/assets/vault"
        
      - name: Generate SSG assets
        run: |
          moltenobsidian ssg generate \
          --from-folder "nodsoft_moltenobsidian_web/vault" \
          --output-path "nodsoft_moltenobsidian_web/src/assets/vault" \
          --ignored-files ".gitignore"
        
      - name: Install PNPM
        run: npm install -g pnpm
        
      - name: Install dependencies
        run: |
          cd "nodsoft_moltenobsidian_ssg_client"
          pnpm recursive install --prod
        
      - name: Install, build, and upload
        uses: withastro/action@v1
        with:
          path: nodsoft_moltenobsidian_web # The root location of your Astro project inside the repository. (optional)
          # node-version: 18 # The specific version of Node that should be used to build your site. Defaults to 18. (optional)
          package-manager: pnpm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1